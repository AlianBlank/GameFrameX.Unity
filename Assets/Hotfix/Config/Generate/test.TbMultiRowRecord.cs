
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using LuBan.Runtime;
using SimpleJSON;


namespace cfg.test
{
    public partial class TbMultiRowRecord
    {
        private readonly System.Collections.Generic.Dictionary<int, test.MultiRowRecord> _dataMap;
        private readonly System.Collections.Generic.List<test.MultiRowRecord> _dataList;
        
        public TbMultiRowRecord(JSONNode jsonNode)
        {
            _dataMap = new System.Collections.Generic.Dictionary<int, test.MultiRowRecord>();
            _dataList = new System.Collections.Generic.List<test.MultiRowRecord>();
            
            foreach(JSONNode vNode in jsonNode.Children)
            {
                test.MultiRowRecord deserializeItem;
                { if(!vNode.IsObject) { throw new SerializationException(); }  deserializeItem = test.MultiRowRecord.DeserializeMultiRowRecord(vNode);  }
                _dataList.Add(deserializeItem);
                _dataMap.Add(deserializeItem.Id, deserializeItem);
            }
        }
    
        public System.Collections.Generic.Dictionary<int, test.MultiRowRecord> DataMap 
        {
            get { return _dataMap; }
        }

        public System.Collections.Generic.List<test.MultiRowRecord> DataList 
        {
            get { return _dataList; }
        }
    
        public test.MultiRowRecord GetOrDefault(int key) 
        {  
            return _dataMap.TryGetValue(key, out var v) ? v : null;
        }
        
        public test.MultiRowRecord Get(int key) 
        { 
            return _dataMap[key];
        }
        
        public test.MultiRowRecord this[int key] 
        {
            get
            {
                return _dataMap[key];
            }
        }
    
        public void ResolveRef(Tables tables)
        {
            foreach(var value in _dataList)
            {
                value.ResolveRef(tables);
            }
        }
        
    }

}
