
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using LuBan.Runtime;
using GameFrameX.Config;
using SimpleJSON;

namespace Hotfix.Config.test
{
    public sealed partial class TestSize : LuBan.Runtime.BeanBase
    {
        public TestSize(JSONNode _buf)
        {
            { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
            { var __json0 = _buf["x1"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; X1 = new int[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  X1[__index0++] = __v0; }   }
            { var __json0 = _buf["x2"]; if(!__json0.IsArray) { throw new SerializationException(); } X2 = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  X2.Add(__v0); }   }
            { var __json0 = _buf["x3"]; if(!__json0.IsArray) { throw new SerializationException(); } X3 = new System.Collections.Generic.HashSet<int>(/*__json0.Count*/); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  X3.Add(__v0); }   }
            { var __json0 = _buf["x4"]; if(!__json0.IsArray) { throw new SerializationException(); } X4 = new System.Collections.Generic.Dictionary<int, int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int _k0;  { if(!__e0[0].IsNumber) { throw new SerializationException(); }  _k0 = __e0[0]; } int _v0;  { if(!__e0[1].IsNumber) { throw new SerializationException(); }  _v0 = __e0[1]; }  X4.Add(_k0, _v0); }   }
            PostInit();
        }

        public static TestSize DeserializeTestSize(JSONNode _buf)
        {
            return new test.TestSize(_buf);
        }

        public readonly int Id;
        public readonly int[] X1;
        public readonly System.Collections.Generic.List<int> X2;
        public readonly System.Collections.Generic.HashSet<int> X3;
        public readonly System.Collections.Generic.Dictionary<int, int> X4;
        public const int __ID__ = 340006319;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef(TablesComponent tables)
        {
            
            
            
            
            
        }

        public override string ToString()
        {
            return "{ "
            + "id:" + Id + ","
            + "x1:" + StringUtil.CollectionToString(X1) + ","
            + "x2:" + StringUtil.CollectionToString(X2) + ","
            + "x3:" + StringUtil.CollectionToString(X3) + ","
            + "x4:" + StringUtil.CollectionToString(X4) + ","
            + "}";
        }

        partial void PostInit();
    }
}
